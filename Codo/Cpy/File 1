import subprocess
from termcolor import colored
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

# Check if termcolor is installed, and install it if not
try:
    import termcolor
except ImportError:
    print("Hey! termcolor is not installed! Would you like to install it? y/n")
    answer = input(">>> ")
    while True:
        if answer.lower() == "y":
            subprocess.run(['pip3', 'install', 'termcolor'], check=True)
            break
        elif answer.lower() == "n":
            print("Well, the program isn't going to work so... Enjoy getting an error lmao")
            break
        else:
            print("Wrong input!")

# Print welcome message
msg = colored("Youtube", "red")
msg = f"----- Welcome to the {msg} uploader! -----"
print(msg)
print("")

# Get video details from user input
path = input("What is the video path? ")
print("")
title = input("What do you want the title to be? ")
print("")
des = input("What do you want the description to be? ")
print("")
print("Just as a bit of a warning. The tags are broken in this version.")
tags = input("What should the tags be? ")
print("")

# Set video privacy status
while True:
    sec = input("Do you want the video to be public? (This doesn't matter because YouTube locks the video anyway) ")
    if sec.lower() in ["y", "n"]:
        break
    else:
        print("That isn't valid")
if sec.lower() == "y":
    stats = "public"
else:
    stats = "private"

# Build YouTube API client
creds = Credentials.from_authorized_user_file("client_secret.json", ["https://www.googleapis.com/auth/youtube.force-ssl"])
youtube = build("youtube", "v3", credentials=creds)

# Upload video using YouTube API
try:
    response = youtube.videos().insert(
        part="snippet,status",
        body={
          "snippet": {
            "title": title,
            "description": des,
            "tags": tags.split(","),
            "categoryId": "22"
          },
          "status": {
            "privacyStatus": stats
          }
        },
        media_body=path
    ).execute()
    print(f"Video '{title}' was successfully uploaded to YouTube with video ID {response['id']}")
except HttpError as e:
    print(f"An error occurred: {e}")
